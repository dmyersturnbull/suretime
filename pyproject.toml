[metadata]
description-file = "README.md"

[build-system]
requires = ["poetry>=1.1,<2", "virtualenv==20.0.33", "wheel>=0.36,<1.0"]
build-backend = "poetry.masonry.api"


#########################################################################################
# Poetry metadata
#########################################################################################

[tool.poetry]

name = "ensuretimezone"
version = "0.1.0"

description = "Get IANA timezones and fully resolved timestamps, even on Windows"
keywords = ["timezone", "zoneinfo", "datetime", "timestamp"]
authors = ["Douglas Myers-Turnbull"]
maintainers = ["Douglas Myers-Turnbull"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/dmyersturnbull/ensuretimezone"
repository = "https://github.com/dmyersturnbull/ensuretimezone"
documentation = "https://ensuretimezone.readthedocs.io"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Natural Language :: English",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
	"Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
include = []

[tool.poetry.urls]
CI = "https://github.com/dmyersturnbull/ensuretimezone/actions"
Issues = "https://github.com/dmyersturnbull/ensuretimezone/issues"
Download = "https://pypi.org/project/ensuretimezone/"


#########################################################################################
# Poetry build & dependencies
#########################################################################################

[tool.poetry.dependencies]
python                   = ">=3.9, <4"

[tool.poetry.dev-dependencies]
bandit                   = ">=1.7, <2.0"
black                    = "=20.8b1"
coverage                 = {extras = ["toml"], version = "^5"}
flake8                   = "^3"
flake8-bugbear           = "^20"
flake8-docstrings        = "^1"
pre-commit               = ">=2.9, <3.0"
pre-commit-hooks         = ">=3.4, <4.0"
pytest                   = "^6"
pytest-cov               = "^2"
sphinx                   = "^3"
sphinx-autoapi           = "^1"
sphinx-rtd-theme         = ">=0.5, <1.0"
tomlkit                  = ">=0.7, <1.0"

[tool.poetry.extras]
dev     = [
        "tomlkit", "tyrannosaurus",
        "pre-commit", "pre-commit-hooks", "black",
        "pytest", "hypothesis", "coverage", "pytest-cov", "bandit",
        "flake8", "flake8-docstrings", "flake8-bugbear",
        "sphinx",  "sphinx-autoapi", "sphinx-rtd-theme"
]


#########################################################################################
# Tyrannosaurus
#########################################################################################


[tool.tyrannosaurus.options]
sort     = true
align    = true

[tool.tyrannosaurus.sources]

# --- VERSIONS ---
pycompatversions   = "tool.poetry.dependencies"
pytoxversions      = "tool.poetry.dependencies"
pymetaversion      = "'3.9'"

# --- DEVELOPMENT PARAMS ---
metavm             = "'ubuntu-latest'"
devdeps            = "tool.poetry.dev-dependencies"

# --- PROJECT INFO ---
status             = "'Development'"
date               = "'2021-01-20'"
copyright          = "'Copyright 2021'"
version            = "tool.poetry.version"
release            = "tool.poetry.version"
long_description   = "tool.poetry.description"

# --- AUTHORS ---
authors            = [
    "Douglas Myers-Turnbull <github:dmyersturnbull,orcid:0000-0003-3610-4808>"
]
contributors = [ ]
maintainers = "tool.tyrannosaurus.sources.authors"

# --- CODING STYLE ---
linelength         = "tool.black.line-length"
importorderstyle   = "'google'"
docstringstyle     = "'google'"


# --- CODING STYLE IN PEP8 ---
[tool.tyrannosaurus.sources.flake8skip]
all    = "'W503,E203,E225,E301,E302,E501,D107,D200,D205,D400,D403,D409,D410,D411,D212,W391,W293'"
test   = "'D100,D101,D102,D103,D104,S101,W503,E203,E225,E301,E302,E501,D107,D200,D205,D400,D403,D409,D410,D411,D212,W391,W293'"


[tool.tyrannosaurus.targets]
pyproject    = true
init         = true
tox          = true
precommit    = true
docs         = true
recipes      = true
license      = true
authors      = true
github       = true
travis       = true
dockerfile   = true
readme       = true
changelog    = true
citation     = true
codemeta     = true
environment  = true


#########################################################################################
# Style checking
#########################################################################################

[tool.coverage.paths]
source = ["ensuretimezone"]

[tool.coverage.run]
source = ["ensuretimezone"]

[tool.coverage.report]
show_missing = true

[tool.black]
line-length = 100
# As of December 2020, black doesn't accept py39
target-version = ["py38"]

[tool.isort]
line_length = 100

[mypy]
check_untyped_defs = true
strict_optional = true


# ------- THE FOLLOWING ARE NOT USED BY THEIR RESPECTIVE TOOLS  --------
# --- There are open discussions about supporting pyproject for each ---
# https://github.com/python/mypy/issues/5205
# https://github.com/PyCQA/bandit/issues/606
# https://github.com/PyCQA/pycodestyle/issues/813
# https://github.com/PyCQA/pydocstyle/issues/447

[tool.bandit]

[tool.pycodestyle]
max-line-length = 100
statistics = true

[tool.pydocstyle]
